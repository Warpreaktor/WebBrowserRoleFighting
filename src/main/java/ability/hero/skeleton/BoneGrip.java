package ability.hero.skeleton;

import ability.Effectable;
import config.ApplicationProperties;
import dto.attack.AttackDto;
import enums.AbilityType;
import fight.FightService;
import hero.Hero;
import hero.classes.Skeleton;
import lombok.Getter;
import ability.Ability;
import mechanic.Damage;
import effect.Strangulation;

import static constants.AbilityGameWeight.BONE_GRIP_GW;
import static constants.AbilityGlobalDamage.BONE_GRIP;
import static tools.Dice.byMinMaxChance;
import static tools.Dice.tryTo;
import static tools.Dice.tryToHit;

/**
 * –ö–æ—Å—Ç—è–Ω–∞—è —Ö–≤–∞—Ç–∫–∞.
 * –ö—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ: –°–∫–µ–ª–µ—Ç —Ä–µ–∑–∫–æ –≤—ã—Ç—è–≥–∏–≤–∞–µ—Ç —Ä—É–∫—É –∏ —Å —Å–∏–ª–æ–π —Å–¥–∞–≤–ª–∏–≤–∞–µ—Ç –≥–æ—Ä–ª–æ –ø—Ä–æ—Ç–∏–≤–Ω–∏–∫–∞,
 * –æ—Å—Ç–∞–≤–ª—è—è –Ω–∞ –Ω–µ–π —Å–ª–µ–¥ –ª–µ–¥—è–Ω–æ–≥–æ –ø—Ä–∏–∫–æ—Å–Ω–æ–≤–µ–Ω–∏—è —Å–º–µ—Ä—Ç–∏.
 *
 * –õ–æ—Ä:
 * ¬´–ö–æ—Å—Ç–ª—è–≤—ã–µ –ø–∞–ª—å—Ü—ã —Å –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω–æ–π —Å–∏–ª–æ–π —Å–∂–∏–º–∞—é—Ç –ø–ª–æ—Ç—å, –∞ —Ö–æ–ª–æ–¥–Ω–∞—è, –º—ë—Ä—Ç–≤–∞—è —ç–Ω–µ—Ä–≥–∏—è
 * –ø—Ä–æ–Ω–∏–∫–∞–µ—Ç –≤ —Å–∞–º—É—é –≥–ª—É–±–∏–Ω—É –∫–æ—Å—Ç–µ–π –∂–µ—Ä—Ç–≤—ã.
 * –ù–µ —É—Å–ø–µ–≤–∞–µ—Ç –ø—Ä–æ—Ç–∏–≤–Ω–∏–∫ –æ—Ç–¥—ë—Ä–Ω—É—Ç—å —Ä—É–∫—É, –∫–∞–∫ —É–∂–µ —á—É–≤—Å—Ç–≤—É–µ—Ç –Ω–∞ —Å–µ–±–µ –ø–µ—á–∞—Ç—å –Ω–µ–±—ã—Ç–∏—è.¬ª
 */
public class BoneGrip extends Ability implements Effectable {

    private static final String PICTURE_PATH =
            ApplicationProperties.getHost() + "/images/ability/hero/skeleton/bone_grip.png";

    private static final String NAME = "–ö–æ—Å—Ç—è–Ω–∞—è —Ö–≤–∞—Ç–∫–∞";

    private static final AbilityType TYPE = AbilityType.ENEMY_TARGET;

    private static final String DESCRIPTION =
            "–°–∫–µ–ª–µ—Ç —Ä–µ–∑–∫–æ –≤—ã—Ç—è–≥–∏–≤–∞–µ—Ç —Ä—É–∫—É –∏ —Å —Å–∏–ª–æ–π —Å–¥–∞–≤–ª–∏–≤–∞–µ—Ç –∫–æ–Ω–µ—á–Ω–æ—Å—Ç—å –ø—Ä–æ—Ç–∏–≤–Ω–∏–∫–∞, –æ—Å—Ç–∞–≤–ª—è—è –Ω–∞ –Ω–µ–π —Å–ª–µ–¥ –ª–µ–¥—è–Ω–æ–≥–æ –ø—Ä–∏–∫–æ—Å–Ω–æ–≤–µ–Ω–∏—è —Å–º–µ—Ä—Ç–∏.";

    /**
     * –°—Ç–æ–∏–º–æ—Å—Ç—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏ –≤ –µ–¥–∏–Ω–∏—Ü–∞—Ö –≤—ã–Ω–æ—Å–ª–∏–≤–æ—Å—Ç–∏
     */
    private static final int cost = 2;

    /**
     * –°–∫–æ–ª—å–∫–æ —Ö–æ–¥–æ–≤ –Ω—É–∂–Ω–æ –∂–¥–∞—Ç—å –ø–æ—Å–ª–µ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è, —á—Ç–æ–±—ã –ø—Ä–∏–º–µ–Ω–∏—Ç—å —Å–Ω–æ–≤–∞)
     */
    private static final int coolDown = 1;

    /**
     * –ò–≥—Ä–æ–≤–æ–π –≤–µ—Å —É–º–µ–Ω–∏—è. –ü–æ —Å—É—Ç–∏ —ç—Ç–æ —Ç–æ, –Ω–∞ —Å–∫–æ–ª—å–∫–æ –æ—Ü–µ–Ω–∏–≤–∞–µ—Ç—Å—è –º–æ—â—å –∏ –ø–æ–ª–µ–∑–Ω–æ—Å—Ç—å —ç—Ç–æ–≥–æ —É–º–µ–Ω–∏—è –≤ –±–æ—é.
     */
    @Getter
    private final int gameWeight = BONE_GRIP_GW;

    /**
     * –°—Å—ã–ª–∫–∞ –Ω–∞ –≤–ª–∞–¥–µ–ª—å—Ü–∞ —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏.
     */
    @Getter
    private final Skeleton owner;

    @Getter
    private final Strangulation effect;

    //==================================================//
    // ‚ñà‚ñà‚ñà       üí¢ –°–ü–ï–¶–ò–ê–õ–¨–ù–´–ï –°–í–û–ô–°–¢–í–ê üí¢        ‚ñà‚ñà‚ñà //
    //==================================================//

    /**
     * –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± —É—Ä–æ–Ω–µ.
     */
    @Getter
    private Damage damage;

    /**
     * –í–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å —É–¥—É—à–µ–Ω–∏—è –ø—Ä–æ—Ç–∏–≤–Ω–∏–∫–∞.
     */
    @Getter
    private final double strangulationChance = 0.3;

    /**
     * –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä
     */
    public BoneGrip(Skeleton skeletonOwner) {
        super(PICTURE_PATH, NAME, TYPE, DESCRIPTION, cost, coolDown);

        this.owner = skeletonOwner;
        this.damage = BONE_GRIP;
        this.effect = new Strangulation();
    }

    @Override
    public void apply(Hero target) {
        var journal = FightService.getInstance().getResult();

        if (!tryToHit(owner, target)) {
            journal.addEventAndLog(owner.getName() + " —Å—Ö–≤–∞—Ç–∏–ª –ª–∏—à—å –≤–æ–∑–¥—É—Ö");
        }

        var damageDto = byMinMaxChance(damage);
        var attack = new AttackDto(damageDto,  owner.getName() + " —Ö–≤–∞—Ç–∞–µ—Ç –∑–∞ –≥–æ—Ä–ª–æ!");
        var defenseDto = target.defense(attack);

        journal.addEventAndLog(attack.getMessage());
        journal.addEventAndLog(defenseDto.getMessage());

        if (tryTo(strangulationChance)) {
            effect.impose(target);
        }

        coolDown();
    }

    @Override
    public void trigger() {
        //do nothing
    }

    public Strangulation getEffect() {
        return effect;
    }
}
