package ability.hero.samodiva;

import config.ApplicationProperties;
import dto.attack.AttackDto;
import dto.damage.DamageDto;
import enums.AbilityType;
import hero.Hero;
import hero.classes.Samodiva;
import lombok.Getter;
import ability.Ability;
import mechanic.Damage;
import effect.Shock;

import static constants.AbilityGameWeight.DISCHARGE_GW;
import static constants.AbilityGlobalDamage.DISCHARGE;
import static enums.AbilityType.ENEMY_TARGET;
import static tools.Dice.byMinMaxChance;
import static tools.Dice.tryTo;

/**
 * –†–∞–∑—Ä—è–¥
 */
public class Discharge extends Ability {

    @Getter
    private static final String PICTURE_PATH = ApplicationProperties.getHost() + "/images/ability/hero/samodiva/lightning_strike.png";

    private static final String NAME = "–†–∞–∑—Ä—è–¥";

    private static final AbilityType TYPE = ENEMY_TARGET;

    private static final String DESCRIPTION = "–°–∞–º–æ–¥–∏–≤–∞ –ø—Ä–∏–∑—ã–≤–∞–µ—Ç –∫ —Å—Ç–∏—Ö–∏—è–º –≥—Ä–æ–º–∞ –∏ –±—å—ë—Ç –≤—Ä–∞–≥–∞ —ç–ª–µ–∫—Ç—Ä–∏—á–µ—Å–∫–∏–º —Ä–∞–∑—Ä—è–¥–æ–º. "
            + "–° –Ω–µ–∫–æ—Ç–æ—Ä–æ–π –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å—é, –º–æ–∂–µ—Ç –≤–≤–µ—Å—Ç–∏ –≤—Ä–∞–≥–∞ –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ —à–æ–∫–∞.";

    private static final int COST = 1;

    private static final int COOL_DOWN = 0;

    /**
     * –ò–≥—Ä–æ–≤–æ–π –≤–µ—Å —É–º–µ–Ω–∏—è. –ü–æ —Å—É—Ç–∏ —ç—Ç–æ —Ç–æ, –Ω–∞ —Å–∫–æ–ª—å–∫–æ –æ—Ü–µ–Ω–∏–≤–∞–µ—Ç—Å—è –º–æ—â—å –∏ –ø–æ–ª–µ–∑–Ω–æ—Å—Ç—å —ç—Ç–æ–≥–æ —É–º–µ–Ω–∏—è –≤ –±–æ—é.
     */
    @Getter
    private final int gameWeight = DISCHARGE_GW;

    /**
     * –°—Å—ã–ª–∫–∞ –Ω–∞ –≤–ª–∞–¥–µ–ª—å—Ü–∞ —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏.
     */
    @Getter
    private final Samodiva owner;

    //==================================================//
    // ‚ñà‚ñà‚ñà       üí¢ –°–ü–ï–¶–ò–ê–õ–¨–ù–´–ï –°–í–û–ô–°–¢–í–ê üí¢        ‚ñà‚ñà‚ñà //
    //==================================================//
    /**
     * –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± —É—Ä–æ–Ω–µ.
     */
    @Getter
    private Damage damage;

    /**
     * –®–∞–Ω—Å –Ω–∞–ª–æ–∂–∏—Ç—å —à–æ–∫
     */
    private double chanceToShock = 0.2;

    /**
     * –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å —à–æ–∫–∞
     */
    private int shockDuration = 1;


    public Discharge(Samodiva owner) {
        super(PICTURE_PATH, NAME, TYPE, DESCRIPTION, COST, COOL_DOWN);

        this.owner = owner;
        this.damage = DISCHARGE;
    }

    @Override
    public void apply(Hero target) {

        if (tryTo(chanceToShock)) {
            target.getEffectStack().impose(new Shock(), shockDuration);
        }

        var damageDto = new DamageDto();
        damageDto.setElectric(byMinMaxChance(damage.getElectric()));
        var attack = new AttackDto(damageDto, "–ñ–ê–•–•! –£–¥–∞—Ä–∏–ª–æ –º–æ–ª–Ω–∏–µ–π!");

        target.defense(attack);

        coolDown();
    }

    @Override
    public void trigger() {
        //do nothing
    }
}
