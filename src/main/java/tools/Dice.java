package tools;

import dto.MinMax;

import java.util.Random;

import static constants.GlobalConstants.GLOBAL_CRIT_DAMAGE_MULTIPLIER;

/**
 * üé≤
 */
public class Dice {

    private static final Random random = new Random();

    public static double getChance() {
        return random.nextDouble();
    }

    /**
     * –ú–µ—Ç–æ–¥ —Å–æ–≤–µ—Ä—à–∞–µ—Ç –ø—Ä–æ–≤–µ—Ä–∫—É –Ω–∞ —á—Ç–æ-–Ω–∏–±—É–¥—å... –Ω–∞ –≤—Å—ë —á—Ç–æ —É–≥–æ–¥–Ω–æ, —É —á–µ–≥–æ –∏–º–µ–µ—Ç—Å—è –Ω–µ–∫–æ—Ç–æ—Ä—ã–π —à–∞–Ω—Å.
     * –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–π —É–¥–∞—Ä, –±–ª–æ–∫, —É–∫–ª–æ–Ω–µ–Ω–∏–µ, –Ω–∞–ª–æ–∂–∏—Ç—å —à–æ–∫ –∏–ª–∏ —è–¥.
     *
     * @param chance —à–∞–Ω—Å –≥–µ—Ä–æ—è —Å–æ–≤–µ—Ä—à–∏—Ç—å –¥–µ–π—Å—Ç–≤–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –±—É–¥–µ—Ç –ø–æ–¥–≤–µ—Ä–≥–Ω—É—Ç–æ –ø—Ä–æ–≤–µ—Ä–∫–µ.
     *
     * @return true –µ—Å–ª–∏ –ø–æ–ø—ã—Ç–∫–∞ –±—ã–ª–∞ —É—Å–ø–µ—à–Ω–æ–π.
     */
    public static boolean tryTo(double chance) {
        double dice = getChance();

        return chance >= dice;
    }

    public static int rollSix() {
        return randomInt(6) + 1;
    }

    public static int rollThree() {
        return randomInt(3) + 1;
    }

    public static int rollTen() {
        return randomInt(9) + 1;
    }

    public static int rollHundred() { return randomInt(100) + 1;}

    /**
     * –í–æ–∑—Ä–∞—â–∞–µ—Ç —Å–ª—É—á–∞–π–Ω–æ–µ —á–∏—Å–ª–æ –æ—Ç –Ω—É–ª—è –¥–æ —É–∫–∞–∑–∞–Ω–Ω–æ–π –≥—Ä–∞–Ω–∏—Ü—ã size (–∏—Å–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ)
     *
     * @param size –≥—Ä–∞–Ω–∏—Ü–∞ –≤ —Ä–∞–º–∫–∞—Ö –∫–æ—Ç–æ—Ä–æ–≥–æ –±—É–¥–µ—Ç –≤–æ–∑–≤—Ä–∞—â–µ–Ω–æ —á–∏—Å–ª–æ
     */
    public static int randomInt(int size) {
        return random.nextInt(size);
    }

    /**
     * –í–æ–∑—Ä–∞—â–∞–µ—Ç —Å–ª—É—á–∞–π–Ω–æ–µ —á–∏—Å–ª–æ –æ—Ç –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–≥–æ –¥–æ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–≥–æ (–≤–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ)
     *
     * @param minMax –≥—Ä–∞–Ω–∏—Ü—ã –≤ —Ä–∞–º–∫–∞—Ö –∫–æ—Ç–æ—Ä–æ–≥–æ –±—É–¥–µ—Ç –≤–æ–∑–≤—Ä–∞—â–µ–Ω–æ —á–∏—Å–ª–æ
     */
    public static double randomByMinMax(MinMax minMax) {
        return random.nextDouble(minMax.getMin(), minMax.getMax() + 1);
    }
}
